{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","actions/ui.js","components/ui/AddNewFab.js","helpers/calendar-menssages-es.js","components/calendar/CalendarEvent.js","components/calendar/CalendarModal.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/routers/PrivateRoute.js","components/routers/PublicRoute.js","components/routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","event","eventActive","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fethSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fethConToken","token","localStorage","getItem","prepareEvents","events","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","eventos","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegiterValues","handleRegiterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","uiOpenModal","AddNewFab","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowEnd1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","eventSetAtive","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4531b500.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n\r\n    uiOpenModal: '[UI] Open modal',\r\n    uiCloseModal: '[UI] Close modal',\r\n\r\n    eventSetAtive: '[event] Set active', \r\n    eventLogout: '[event] Logout event',\r\n\r\n    eventStartAddNew: '[event] Start add new', \r\n    eventAddNew: '[event] Add new', \r\n    eventClearActiveEvent: '[event] Clear active event', \r\n    eventUpdated: '[event] Event updated', \r\n    eventDeleted: '[event] Event deleted', \r\n    eventLoaded: '[event] Event loaded',\r\n\r\n    authChecking: '[auth] Checking login state',\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true,\r\n            };\r\n        \r\n            case types.uiCloseModal:\r\n                return {\r\n                    ...state,\r\n                    modalOpen: false,\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n// {\r\n//     id: '',\r\n//     title: '',\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 2, 'hours' ).toDate(),\r\n//     bgcolor: '',\r\n//     notes: '',\r\n//     user: {\r\n//         _id: '',\r\n//         name: ''\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    event: [],\r\n    eventActive: null\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.eventSetAtive:\r\n            return {\r\n                ...state,\r\n                eventActive: action.payload,\r\n            }\r\n    \r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                event: [ \r\n                    ...state.event,\r\n                    action.payload \r\n                ] \r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n        return {\r\n            ...state,\r\n            eventActive: null,\r\n        }\r\n\r\n        case types.eventUpdated:\r\n        return {\r\n            ...state,\r\n            event: state.event.map(\r\n                e => ( e.id === action.payload.id ) \r\n                    ? action.payload \r\n                    : e\r\n            )\r\n        }\r\n\r\n        case types.eventDeleted:\r\n        return {\r\n            ...state,\r\n            event: state.event.filter(\r\n                e => ( e.id !== state.eventActive.id ) \r\n            ),\r\n            eventActive: null,\r\n        }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                event: [ ...action.payload ]\r\n            }\r\n           \r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\"\r\n\r\n\r\nconst initialState =  {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) =>{\r\n    switch ( action.type ) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        \r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware ( thunk )\r\n    )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fethSinToken = ( endpoint, data, method = 'GET' ) => {\r\n    \r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nexport const fethConToken = ( endpoint, data, method = 'GET' ) => {\r\n    \r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem( 'token' ) || '';\r\n    \r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n} \r\n ","import moment from \"moment\";\r\n\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate()\r\n        })\r\n    );\r\n\r\n\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { fethConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n        try {\r\n            const resp = await fethConToken( 'events', event, 'POST' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                \r\n                event.id = body.msg.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n\r\n                console.log(event );\r\n                dispatch( eventAddNew( event ) );\r\n                \r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = ( event ) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetAtive = ( event ) => ({\r\n    type: types.eventSetAtive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent});\r\n\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fethConToken( `events/${ event.id }`, event, 'PUT' );\r\n            const body = await resp.json();\r\n            \r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else {\r\n                Swal.fire( 'Error', body.msg, 'error' );\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event,\r\n})\r\n\r\nexport const eventStartDelete = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { id } = getState().calendar.eventActive;\r\n\r\n        try {\r\n            \r\n            const resp = await fethConToken( `events/${ id }`, {}, 'DELETE' );\r\n            const body = await resp.json();\r\n            \r\n            if ( body.ok ) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire( 'Error', body.msg, 'error' );\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\n\r\nexport const eventStartLoaded = () => {\r\n    return async( dispatch ) => {\r\n        try {\r\n            \r\n            const resp = await fethConToken( 'events' );\r\n            const body = await resp.json();\r\n    \r\n            const events = prepareEvents(body.eventos);\r\n    \r\n            dispatch( eventLoaded( events ) );\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = ( eventos ) => ({\r\n    type: types.eventLoaded,\r\n    payload: eventos\r\n})\r\n\r\nexport const eventLogout = () => ({ type: types.eventLogout })\r\n","import { fethConToken, fethSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fethSinToken( 'auth', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            Swal.fire( 'Error', body.msg, 'error' );\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = ( name, email, password ) => {\r\n    return async( dispatch ) =>{\r\n\r\n        const resp = await fethSinToken( 'auth/new', { name, email, password }, 'POST' );\r\n        const body = await resp.json();\r\n        \r\n        if ( body.ok ) {\r\n\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n\r\n        } else {\r\n            Swal.fire( 'Error', body.msg, 'error' );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async( dispatch ) => {\r\n        \r\n        const resp = await fethConToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n        \r\n        if ( body.ok ) {\r\n\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n\r\n        } else {\r\n            dispatch( checkingFinish() )\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n        localStorage.clear();\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout });\r\n","import { useState } from \"react\";\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState )\r\n    };\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail:'',\r\n        lPassword:''\r\n    });\r\n    \r\n    const [ formRegiterValues, handleRegiterInputChange ] = useForm({\r\n        rName: '',\r\n        rEmail:'',\r\n        rPassword:'',\r\n        rPassword2:''\r\n    });\r\n    \r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword, rPassword2 } = formRegiterValues\r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin( lEmail, lPassword ) );\r\n    }\r\n        \r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( rPassword !== rPassword2 ) {\r\n            Swal.fire( 'Error', 'Las contraceñas deben ser iguales', 'error' );\r\n        }\r\n\r\n        dispatch( startRegister( rName, rEmail, rPassword ) )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='lEmail'\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='lPassword'\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegiterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegiterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword\"\r\n                                value={ rPassword }\r\n                                onChange={ handleRegiterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegiterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { eventStartLogout } from '../../actions/events';\r\n\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    \r\n    const hanldeLogout = () => {\r\n\r\n        dispatch( startLogout() );\r\n    \r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button\r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ hanldeLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleClickNew = () => dispatch( uiOpenModal() );\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\n\r\nexport const CalendarEvent = ( { event } ) => {\r\n    \r\n    const { title, user } = event;\r\n    \r\n    return (\r\n\r\n        <div>\r\n            <strong>{ title }</strong>            \r\n            <span> - { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add( 1, 'hours' );\r\nconst nowEnd1 = now.clone().add( 1,'hours' );\r\n\r\nconst initEvent = {\r\n    title:'',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowEnd1.toDate(),\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const { eventActive } = useSelector( state => state.calendar );\r\n\r\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\r\n    const [ dateEnd, setDateEnd ] = useState( nowEnd1.toDate() );\r\n    const [ titleValid, setTitleValid ] = useState( true );\r\n\r\n    const [ formValues, setFormValues ] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if ( eventActive ) {\r\n            setFormValues( eventActive )\r\n        } else {\r\n            setFormValues( initEvent )\r\n        }\r\n    }, [eventActive, setFormValues ])\r\n\r\n    const handleInputChange = ( { target } ) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [ target.name ]: target.value\r\n        });\r\n    }\r\n    \r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() ); \r\n        setFormValues( initEvent );\r\n    }\r\n\r\n    const handleStartDateChange = ( e ) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,  \r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = ( e ) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = ( e ) => {\r\n        e.preventDefault();\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if ( momentStart.isSameOrAfter( momentEnd ) ){\r\n            return Swal.fire( 'Error', 'La fecha final debe ser mayor que la inicial', 'error' );\r\n        }\r\n        \r\n        if ( title.trim().length < 2 ) {\r\n            return setTitleValid( false )\r\n        }\r\n\r\n        if ( eventActive ){\r\n            dispatch( eventStartUpdate( formValues ) )\r\n        } else {\r\n            dispatch( eventStartAddNew({\r\n                ...formValues,\r\n                id: new Date().getTime(),\r\n                user: {\r\n                    _id: '123',\r\n                    name: 'fernando',\r\n                }\r\n            }) );\r\n        }\r\n\r\n        setTitleValid( true );\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n            <Modal\r\n                isOpen={ modalOpen }\r\n                onRequestClose={ closeModal }\r\n                style={ customStyles }\r\n                closeTimeoutMS={ 200 }\r\n                className=\"modal\"\r\n                overlayClassName=\"modal-fondo\"\r\n            >\r\n                <h1> { ( eventActive ) ? 'Editar evento' : 'Nuevo evento' } </h1>\r\n                <hr />\r\n                <form\r\n                    className=\"container\"\r\n                    onSubmit={ handleSubmitForm }\r\n                >\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora inicio</label>\r\n                        <DateTimePicker\r\n                            onChange={ handleStartDateChange }\r\n                            value={ dateStart }\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora fin</label>\r\n                        <DateTimePicker\r\n                            onChange={ handleEndDateChange }\r\n                            value={ dateEnd }\r\n                            minDate={ dateStart }\r\n                            className=\"form-control\"\r\n                            \r\n                        />\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <div className=\"form-group\">\r\n                        <label>Titulo y notas</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className={ `form-control ${ !titleValid && 'is-invalid' } `}\r\n                            placeholder=\"Título del evento\"\r\n                            name=\"title\"\r\n                            autoComplete=\"off\"\r\n                            value={ title }\r\n                            onChange={ handleInputChange }\r\n                        />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <textarea \r\n                            type=\"text\" \r\n                            className=\"form-control\"\r\n                            placeholder=\"Notas\"\r\n                            rows=\"5\"\r\n                            name=\"notes\"\r\n                            value={ notes }\r\n                            onChange={ handleInputChange }\r\n                        ></textarea>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary btn-block\"\r\n                    >\r\n                        <i className=\"far fa-save\"></i>\r\n                        <span> Guardar</span>\r\n                    </button>\r\n\r\n                </form>\r\n            </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() )\r\n    }\r\n    return (\r\n        <button \r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { messages } from '../../helpers/calendar-menssages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetAtive, eventStartLoaded } from '../../actions/events';\r\n\r\nimport 'moment/locale/es'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale( 'es' );\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { event, eventActive } = useSelector(state => state.calendar );\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem( 'lastView' ) || 'month' );\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( eventStartLoaded() )\r\n        \r\n    }, [ dispatch ])\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        \r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660', \r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        \r\n        return {\r\n            style\r\n        };\r\n    }\r\n\r\n    const onDoubleClick = ( e ) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = ( e ) => {\r\n        dispatch( eventSetAtive (e) );\r\n    }\r\n\r\n    const onViewChange = ( e ) => {\r\n        setLastView(e);\r\n        localStorage.setItem( 'lastView', e );\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ event }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n            {\r\n                (eventActive) && <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest \r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest }\r\n            component={ ( props ) => (\r\n                ( isAuthenticated )\r\n                ? ( <Component { ...props } /> )\r\n                : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest \r\n}) => {\r\n    return (\r\n        <Route {...rest }\r\n            component={ ( props ) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        \r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { startChecking } from '../../actions/auth';\r\nimport { LoginScreen } from '../auth/LoginScreen';\r\nimport { CalendarScreen } from '../calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking() );\r\n\r\n    }, [ dispatch ])\r\n\r\n    if ( checking ) {\r\n        return (<h4>espere..</h4>)\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\"\r\n                        component={ LoginScreen }\r\n                        isAuthenticated={ !!uid } \r\n                    />\r\n                    \r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={ CalendarScreen }\r\n                        isAuthenticated={ !!uid } \r\n                    />\r\n            \r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './components/routers/AppRouter';\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\n// console.log(process.env);\nReactDOM.render(\n\n  <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}